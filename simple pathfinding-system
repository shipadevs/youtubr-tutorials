-- made by @super123goed on roblox
local PathfindingService = game:GetService("PathfindingService")
local Players = game:GetService("Players")
local npc = script.Parent
local humanoid = npc:WaitForChild("Humanoid")
local rootPart = npc:WaitForChild("HumanoidRootPart")

-- movement settings
humanoid.WalkSpeed = 14 -- how fast the npc moves. default player speed is 16
humanoid.JumpPower = 50 -- how high the npc can jump. higher value = higher jump

local function getNearestPlayer()
	local nearestPlayer = nil
	local shortestDistance = math.huge

	for _, player in ipairs(Players:GetPlayers()) do
		if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			local dist = (player.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude
			if dist < shortestDistance then
				shortestDistance = dist
				nearestPlayer = player
			end
		end
	end
	return nearestPlayer
end

while task.wait() do
	local player = getNearestPlayer()
	if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
		local targetPos = player.Character.HumanoidRootPart.Position
		local path = PathfindingService:CreatePath({
			AgentRadius = 2, -- determines the npc's widt.; smaller means it fits easier through narrow spaces
			AgentHeight = 5, -- determines the npc's height; too low means it won't fit under low ceilings
			AgentCanJump = true -- allows the npc to jump automatically if needed
		})
		path:ComputeAsync(rootPart.Position, targetPos)

		if path.Status == Enum.PathStatus.Success then
			for _, waypoint in ipairs(path:GetWaypoints()) do
				if waypoint.Action == Enum.PathWaypointAction.Jump then
					humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				end
				humanoid:MoveTo(waypoint.Position)
				humanoid.MoveToFinished:Wait(1)
			end
		else
			print("no path found.")
		end
	end
end

